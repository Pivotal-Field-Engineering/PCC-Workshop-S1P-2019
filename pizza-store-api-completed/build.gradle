buildscript {
	repositories {
		mavenCentral()
		maven {	url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
	}
}

plugins {
	id "java"
	id "idea"
	id "eclipse"
	id "io.spring.dependency-management" version "1.0.6.RELEASE"
	id "org.springframework.boot" version "2.1.7.RELEASE"
}
apply plugin: 'maven'
task createPom << {
    pom {
        project {
            groupId 'org.example'
            artifactId 'test'
            version '1.0.0'

            inceptionYear '2008'
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
        }
    }.writeTo("pom.xml")
}

bootJar {
	mainClassName = 'io.pivotal.cloudcache.app.CloudcachePizzaStoreApplication'
	baseName = "cloudcache-pizza-store-app"
}

idea {
	module {
		downloadJavadoc = true
		downloadSources = true
	}
}

description = "Spring Boot application using PCC in PCF"
version = '1.0.0-SNAPSHOT'

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/libs-snapshot" }
	maven {	url "https://plugins.gradle.org/m2/" }
}

compileJava.dependsOn(processResources)

dependencies {

	compile("org.springframework.boot:spring-boot-starter-web"){
		exclude module: 'spring-boot-starter-logging'
	}

	compile ("org.springframework.geode:spring-geode-starter:$springBootDataGemFireVersion")
	compile ("org.apache.logging.log4j:log4j-slf4j-impl")
	runtime "org.slf4j:jcl-over-slf4j"
	runtime "org.slf4j:jul-to-slf4j"
	runtime "org.springframework.shell:spring-shell:$springShellVersion"

	testCompile("org.springframework.boot:spring-boot-starter-test:$springBootVersion"){
		exclude module: 'spring-boot-starter-logging'
	}

}
